# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).
#
# modules:
#
#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
#   Character.create(name: 'Luke', movie: movies.first)

module1 = CourseModule.create(Title: 'Computer Logic', ModuleCode: 'COM1031', ModuleOverview: 'To introduce the fundamental principles of digital logic, circuits and systems starting with symbolic logic through to the concept of logic gates to the structure and operation of digital logic circuits and systems. This module provides an understanding of the underlying computer architecture and internal operation of computer systems.', ModuleLeader: 'JL', ModuleLeaderID: 1, Credits: 15, Year: 1)
module2 = CourseModule.create(Title: 'Foundations of Computing', ModuleCode: 'COM1026', ModuleOverview: 'The course introduces the core concepts of discrete mathematics, including truth tables, propositional and predicate logic, set theory, number theory, relations, functions and mathematical proof. These concepts are useful throughout the programme.', ModuleLeader: 'BD', ModuleLeaderID: 2, Credits: 15, Year: 1)
module3 = CourseModule.create(Title: 'Programming Fundamentals', ModuleCode: 'COM1027', ModuleOverview: 'This module will provide an introduction to the fundamental concepts of object-oriented programming using Java. ', ModuleLeader: 'SK', ModuleLeaderID: 3, Credits: 15, Year: 1)
module4 = CourseModule.create(Title: 'Web and Database Systems', ModuleCode: 'COM1025', ModuleOverview: 'This module introduces students to key technologies of the World Wide Web (WWW) and Database systems.', ModuleLeader: 'MC' , ModuleLeaderID: 4, Credits: 15, Year: 1)
module5 = CourseModule.create(Title: 'Data Structures and Algorithms', ModuleCode: 'COM1029', ModuleOverview: 'Appropriate choices of data structures can expedite algorithm efficiency and also aid clear thinking when designing algorithms. It is thus natural for data structures to be studied with algorithms. An algorithm is a sequence of steps for performing some process.  A computer program is not an algorithm but a representation of an algorithm. There is a need to be able to create effective algorithms, quantify their efficiency and classify them independently of any computing system or language.', ModuleLeader: 'GC', ModuleLeaderID: 5, Credits: 15 , Year: 1)
module6 = CourseModule.create(Title: 'Foundations of Computing 2', ModuleCode: 'COM1033', ModuleOverview: 'The course builds upon COM1026, Foundations of Computing, and introduces the key concepts of differentiation/integration of a function and their applications. It also provides a short introduction to solving linear equations using matrix manipulation and a primer on statistics.', ModuleLeader: 'YL', ModuleLeaderID: 6, Credits: 15, Year: 1)
module7 = CourseModule.create(Title: 'Operating Systems', ModuleCode: 'COM1032', ModuleOverview: 'The module covers the main concepts of modern operating systems (OS). The module has three main parts. The first part of the course provides a short history of operating systems and their purposes. It also introduces the student to multiprocessing and multithreading, i.e. how an OS manages multiple tasks that execute at the same time (concurrently) and share resources. The second part of the course addresses the problem of memory management. The final part of the course introduces file systems and Input/output handling. Throughout the module, case studies of various operating systems are presented while the exercises and labs focus on one Linux flavour suitable to run on a platform such as Raspberry Pi 3.', ModuleLeader: 'JL', ModuleLeaderID: 1, Credits: 15, Year: 1)
module8 = CourseModule.create(Title: 'Software Engineering', ModuleCode: 'COM1028', ModuleOverview: 'This module will provide an introduction to the principles of software engineering.  This will include an overview of the systems development lifecycle, agile methods and common approaches employed to develop software.  This will include aspects on requirements specification, design, implementation and testing.  Particular attention will be paid to the design of software, with the introduction of best practice guidelines, such as design patterns.  Throughout the module, software engineering methods will be put into practice, and Java programming skills will be consolidated.', ModuleLeader: 'SD', ModuleLeaderID: 7, Credits: 15, Year: 1)



module9 = CourseModule.create(Title: 'Advanced Algorithms', ModuleCode: 'COM2031', ModuleOverview: 'The module introduces algorithmic techniques for various sets of problems and teaches how to analyse algorithms in terms of their complexity. ', ModuleLeader: 'SS', ModuleLeaderID: 8, Credits: 15, Year: 2)
module10 = CourseModule.create(Title: 'Further Programming Paradigms', ModuleCode: 'COM2040', ModuleOverview: 'This module will introduce fundamental concepts of three different programming paradigms and provide a foundation for the theoretical and practical aspects of building programs using these paradigms. Object Orientated Design and Programming is first introduced as a popular methodology for large application development. The module will then cover two alternative programming paradigms, Functional Programming and Logic Programming, with a focus on both their theoretical underpinnings and computation models and the practical aspects of implementing algorithms and larger applications in those paradigms.', ModuleLeader: 'PK', ModuleLeaderID: 9, Credits: 15, Year: 2)
module11 = CourseModule.create(Title: 'Information Retrieval', ModuleCode: 'COM2034', ModuleOverview: 'This module will provide students with an understanding of information retrieval. This relates to multimedia data (principally text, but also image, video and audio) stored for, presented on, and consumed from, the web amongst other sources. The module covers fundamental techniques and strategies of information retrieval used in a variety of online applications such as web-search engines, document matching systems, and business storage and analytics.', ModuleLeader: 'RB', ModuleLeaderID: 10, Credits: 15, Year: 2)
module12 = CourseModule.create(Title: 'Web Applications Development', ModuleCode: 'COM2025', ModuleOverview: 'This module will demonstrate some of the latest technologies for building interactive web applications', ModuleLeader: 'AC', ModuleLeaderID: 11, Credits: 15, Year: 2)
module13 = CourseModule.create(Title: 'Artificial Intelligence', ModuleCode: 'COM2028', ModuleOverview: 'This module demonstrates the basic principles and methods of Artificial Intelligence (AI) and provides the basis for understanding and later choosing the correct tools for building such systems. Applications that motivate the development of Artificial Intelligence technology include intelligent robots, automated navigation for autonomous vehicles, object recognition and tracking, medical diagnosis, language communications and many others. Any application that requires human-like intelligence is an application for Artificial Intelligence.', ModuleLeader: 'LT', ModuleLeaderID: 12, Credits: 15, Year: 2)
module14 = CourseModule.create(Title: 'Computer Networking', ModuleCode: 'COM2022', ModuleOverview: 'This module introduces essential concepts about all the computer networking layering levels with some emphasis on the routing algorithms and implementation of network sensing.', ModuleLeader: 'NS', ModuleLeaderID: 13, Credits: 15, Year: 2)
module15 = CourseModule.create(Title: 'Parallel Computing', ModuleCode: 'COM2039', ModuleOverview: 'The course introduces concepts of parallel and distributed computing by considering different architectures that support this, and working through different categories of modules. The implementation of such solutions and their subsequent analysis gives practical experience and an understanding of the difficulties involved. Special consideration will be given to performance issues of resulting architectures, leading to a foundation for the design of high performance computing for distributed real-time control.', ModuleLeader: 'SD', ModuleLeaderID: 14, Credits: 15, Year: 2)
module16 = CourseModule.create(Title: 'Software Engineering Project', ModuleCode: 'COM2027', ModuleOverview: 'In this module students gain first-hand experience of teamwork applied to the software development lifecycle by designing and delivering a software system in a team. The teams take ownership of a pre-defined high-level specification, and must refine it into a software system they can then implement and test, while demonstrating adherence to best or current software engineering practices. Through this group project and associated reflection, the students gain an understanding of how to successfully design a software system that meets the specification, how to independently research and choose technologies, and how to implement and evaluate their system before finally delivering it to the user. Throughout the project, the team is expected to plan and document their activities, hold regular project meetings, and will be audited on how they approach the different tasks and adhere to industry standards.', ModuleLeader: 'SK', ModuleLeaderID: 3, Credits: 15, Year: 2)



module17 = CourseModule.create(Title: 'Computer Security', ModuleCode: 'COM3009', ModuleOverview: 'This module covers the basic principles behind computer security.', ModuleLeader: 'SS', ModuleLeaderID: 8, Credits: 15, Year: 3)
module18 = CourseModule.create(Title: 'Computational Intelligence', ModuleCode: 'COM3013', ModuleOverview: 'This module gives an introductory yet up-to-date description of the fundamental technologies of computational Intelligence, including evolutionary computation, neural computing and their applications. Main streams of evolutionary algorithms and meta-heuristics, including genetic algorithms, evolution strategies, genetic programming, particle swarm optimization will be taught. Basic neural network models and learning algorithms will be introduced. Interactions between evolution and learning, real-world applications to optimization and robotics, and recent advances will also be discussed.', ModuleLeader: 'YJ', ModuleLeaderID: 15, Credits: 15, Year: 3)
module19 = CourseModule.create(Title: 'Distributed Systems', ModuleCode: 'COM3026', ModuleOverview: 'A distributed system is built of a network of computing devices, which coordinate their actions via message passing to achieve a common goal. Typically, system components are assumed to operate concurrently, lack a global clock and to fail independently. This module shall build and consolidate your knowledge of advanced algorithms, computer networking and/or parallel computing. You shall learn to describe the principles of distributed systems, such as communication, scheduling and fault tolerance as well as to compare and contrast between a broad set of instances of distributed systems, algorithms and protocols (e.g., peer-to-peer systems, distributed hash tables, MixNets, distributed ledger technologies) within the context of various applications.', ModuleLeader: 'GC', ModuleLeaderID: 5, Credits: 15, Year: 3)
module20 = CourseModule.create(Title: 'Internet of Things', ModuleCode: 'COM3023', ModuleOverview: 'This module will provide an overview of the key concepts and enabling technologies for the Internet of Things, including: Wireless Sensor Networks, Platforms (Hardware, Software), Machine-to-Machine communications (M2M), protocols and standards (e.g. 6LowPAN, ZigBee, CoAp), semantic technologies, and data and information processing mechanisms.', ModuleLeader: 'MS', ModuleLeaderID: 16, Credits: 15, Year: 3)
module21 = CourseModule.create(Title: 'Advanced Challenges in Web Technologies', ModuleCode: 'COM3014', ModuleOverview: 'This module examines the architectural/design needs and challenges encountered when developing and deploying secure, resilient and scalable web applications using the latest technology. It also provides an introduction to approaches used in modern Internet-scale web applications, covering technologies used in and/or developed by familiar companies such as Twitter, Amazon, Netflix and Google.', ModuleLeader: 'NS', ModuleLeaderID: 13, Credits: 15, Year: 3)
module22 = CourseModule.create(Title: 'Deep Learning and Advanced AI', ModuleCode: 'COM3025', ModuleOverview: 'This module introduces a wide range of deep learning and other state of art techniques in AI for solving real world problems. Basic concepts on statistics and applied maths that thread through key elements in machine learning techniques will be discussed throughout the module. Students will study how to build suitable AI systems that can operate in complicated, real-world environments. The module also prepares students to explore further challenges and opportunities to improve deep learning and AI and bring them to new frontiers.', ModuleLeader: 'LT', ModuleLeaderID: 12, Credits: 15, Year: 3)
module23 = CourseModule.create(Title: 'Mainframe Computing', ModuleCode: 'COM3015', ModuleOverview: 'Mainframe Computing in general provides for an interesting background to, and contrast with, Cloud Computing, and in relation to Business Systems and Distributed Computing more generally.', ModuleLeader: 'AC', ModuleLeaderID: 11, Credits: 15, Year: 3)
module24 = CourseModule.create(Title: 'Systems Verification', ModuleCode: 'COM3028', ModuleOverview: 'The course is an introduction in formal methods for system specification and verification. It will focus on logic-based formalisms and techniques, and specifically on model checking. The main logics taught will be temporal logics, which are mainstream  in verification, especially analysis of hardware systems. Other logics and verification techniques (such as theorem proving) will be included to a smaller extended. Model checkers will be used in the labs, on different system-verification problems. Elements of building model checking tools will be presented and explored. Some elements of advanced verification techniques (e.g., abstraction) will be mentioned.', ModuleLeader: 'IB', ModuleLeaderID: 17, Credits: 15, Year: 3)
module25 = CourseModule.create(Title: 'Professional Project', ModuleCode: 'COM3001', ModuleOverview: "The project consists of a substantial written report and accompanying video presentation and software submission, completed by the student towards the end of their programme of studies. These are based on a major piece of work that involves applying material encountered in the taught component of the degree, and extending that knowledge with the student's contribution, under the guidance of a supervisor. The project lasts over both semesters, and usually involves software development, experimental or theoretical research, or a substantial analysis on a specific topic.", ModuleLeader: 'BD', ModuleLeaderID: 2, Credits: 45, Year: 3)
